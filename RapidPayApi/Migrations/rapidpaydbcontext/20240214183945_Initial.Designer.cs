// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RapidPayApi.Data;

#nullable disable

namespace RapidPayApi.migrations.rapidpaydbcontext
{
    [DbContext(typeof(RapidPayDbContext))]
    [Migration("20240214183945_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RapidPayApi.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("CardHolderFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardHolderLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CardLimit")
                        .HasColumnType("float");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 4500.0,
                            CardHolderFirstName = "Steve",
                            CardHolderLastName = "Rogers",
                            CardLimit = 35000.0,
                            CardNumber = "123456789098765",
                            CompanyName = "The Avengers Group",
                            CreatedDate = new DateTime(2012, 5, 4, 13, 13, 13, 0, DateTimeKind.Unspecified),
                            ExpirationDate = new DateTime(2025, 11, 30, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2023, 10, 15, 10, 11, 12, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Balance = 8000.0,
                            CardHolderFirstName = "Han",
                            CardHolderLastName = "Solo",
                            CardLimit = 17000.0,
                            CardNumber = "135792648013579",
                            CompanyName = "Millennium",
                            CreatedDate = new DateTime(2002, 8, 11, 19, 18, 17, 0, DateTimeKind.Unspecified),
                            ExpirationDate = new DateTime(2026, 3, 31, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2018, 12, 24, 11, 48, 23, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Balance = 175639.0,
                            CardHolderFirstName = "Bruce",
                            CardHolderLastName = "Wayne",
                            CardLimit = 200000.0,
                            CardNumber = "183729406560492",
                            CompanyName = "Wayne Enterprises",
                            CreatedDate = new DateTime(2009, 10, 16, 11, 22, 32, 0, DateTimeKind.Unspecified),
                            ExpirationDate = new DateTime(2025, 12, 31, 23, 59, 59, 0, DateTimeKind.Unspecified),
                            ModifiedDate = new DateTime(2024, 1, 1, 0, 11, 56, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RapidPayApi.Models.CardTransaction", b =>
                {
                    b.Property<int>("CardTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardTransactionId"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<double>("TransactionAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TransactionFee")
                        .HasPrecision(10, 2)
                        .HasColumnType("float(10)");

                    b.Property<double>("TransactionTotal")
                        .HasColumnType("float");

                    b.HasKey("CardTransactionId");

                    b.ToTable("CardTransactions");

                    b.HasData(
                        new
                        {
                            CardTransactionId = 1,
                            CardId = 1,
                            TransactionAmount = 2000.0,
                            TransactionDate = new DateTime(2023, 8, 2, 13, 23, 34, 0, DateTimeKind.Unspecified),
                            TransactionFee = 16.25,
                            TransactionTotal = 0.0
                        },
                        new
                        {
                            CardTransactionId = 2,
                            CardId = 1,
                            TransactionAmount = 2500.0,
                            TransactionDate = new DateTime(2023, 12, 18, 16, 2, 52, 0, DateTimeKind.Unspecified),
                            TransactionFee = 10.56,
                            TransactionTotal = 0.0
                        },
                        new
                        {
                            CardTransactionId = 3,
                            CardId = 2,
                            TransactionAmount = 1500.0,
                            TransactionDate = new DateTime(2022, 4, 16, 10, 40, 41, 0, DateTimeKind.Unspecified),
                            TransactionFee = 14.26,
                            TransactionTotal = 0.0
                        },
                        new
                        {
                            CardTransactionId = 4,
                            CardId = 3,
                            TransactionAmount = 3500.0,
                            TransactionDate = new DateTime(2022, 9, 13, 9, 6, 8, 0, DateTimeKind.Unspecified),
                            TransactionFee = 3.3599999999999999,
                            TransactionTotal = 0.0
                        },
                        new
                        {
                            CardTransactionId = 5,
                            CardId = 3,
                            TransactionAmount = 3000.0,
                            TransactionDate = new DateTime(2023, 1, 23, 12, 17, 23, 0, DateTimeKind.Unspecified),
                            TransactionFee = 6.6900000000000004,
                            TransactionTotal = 0.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
